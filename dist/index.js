#!/usr/bin/env node
(()=>{var __webpack_modules__={898:(e,s,r)=>{"use strict";var o=r(81).spawn;var t=r(837);var escapeSpaces=function(e){if(typeof e==="string"){return e.replace(/\b\s/g,"\\ ")}else{return e}};var escapeSpacesInOptions=function(e){["src","dest","include","exclude","excludeFirst"].forEach((function(s){var r=e[s];if(typeof r==="string"){e[s]=escapeSpaces(r)}else if(Array.isArray(r)===true){e[s]=r.map(escapeSpaces)}}));return e};e.exports=function(e,s){e=e||{};e=t._extend({},e);e=escapeSpacesInOptions(e);var r=e.platform||process.platform;var n=r==="win32";if(typeof e.src==="undefined"){throw new Error("'src' directory is missing from options")}if(typeof e.dest==="undefined"){throw new Error("'dest' directory is missing from options")}var c=e.dest;if(typeof e.host!=="undefined"){c=e.host+":"+e.dest}if(!Array.isArray(e.src)){e.src=[e.src]}var i=[].concat(e.src);i.push(c);var a=(e.args||[]).find((function(e){return e.match(/--chmod=/)}));if(n&&!a){i.push("--chmod=ugo=rwX")}if(typeof e.host!=="undefined"||e.ssh){i.push("--rsh");var l="ssh";if(typeof e.port!=="undefined"){l+=" -p "+e.port}if(typeof e.privateKey!=="undefined"){l+=" -i "+e.privateKey}if(typeof e.sshCmdArgs!=="undefined"){l+=" "+e.sshCmdArgs.join(" ")}i.push(l)}if(e.recursive===true){i.push("--recursive")}if(e.times===true){i.push("--times")}if(e.syncDest===true||e.deleteAll===true){i.push("--delete");i.push("--delete-excluded")}if(e.syncDestIgnoreExcl===true||e.delete===true){i.push("--delete")}if(e.dryRun===true){i.push("--dry-run");i.push("--verbose")}if(typeof e.excludeFirst!=="undefined"&&t.isArray(e.excludeFirst)){e.excludeFirst.forEach((function(e,s){i.push("--exclude="+e)}))}if(typeof e.include!=="undefined"&&t.isArray(e.include)){e.include.forEach((function(e,s){i.push("--include="+e)}))}if(typeof e.exclude!=="undefined"&&t.isArray(e.exclude)){e.exclude.forEach((function(e,s){i.push("--exclude="+e)}))}switch(e.compareMode){case"sizeOnly":i.push("--size-only");break;case"checksum":i.push("--checksum");break}if(typeof e.args!=="undefined"&&t.isArray(e.args)){i=[...new Set([...i,...e.args])]}i=[...new Set(i)];var noop=function(){};var d=e.onStdout||noop;var u=e.onStderr||noop;var _="rsync ";i.forEach((function(e){if(e.substr(0,4)==="ssh "){e='"'+e+'"'}_+=e+" "}));_=_.trim();if(e.noExec){s(null,null,null,_);return}try{var p="";var f="";var y;if(n){y=o("cmd.exe",["/s","/c",'"'+_+'"'],{windowsVerbatimArguments:true,stdio:[process.stdin,"pipe","pipe"]})}else{y=o("/bin/sh",["-c",_])}y.stdout.on("data",(function(e){d(e);p+=e}));y.stderr.on("data",(function(e){u(e);f+=e}));y.on("exit",(function(e){var r=null;if(e!==0){r=new Error("rsync exited with code "+e);r.code=e}s(r,p,f,_)}))}catch(e){s(e,null,null,_)}}},505:(e,s,r)=>{const{existsSync:o,mkdirSync:t,writeFileSync:n}=r(147);const{GITHUB_WORKSPACE:c}=process.env;const validateDir=e=>{if(!o(e)){console.log(`[SSH] Creating ${e} dir in `,c);t(e);console.log("✅ [SSH] dir created.")}else{console.log(`[SSH] ${e} dir exist`)}};const validateFile=e=>{if(!o(e)){console.log(`[SSH] Creating ${e} file in `,c);try{n(e,"",{encoding:"utf8",mode:384});console.log("✅ [SSH] file created.")}catch(s){console.error("⚠️ [SSH] writeFileSync error",e,s.message);process.abort()}}else{console.log(`[SSH] ${e} file exist`)}};e.exports={validateDir:validateDir,validateFile:validateFile}},229:e=>{const s=["REMOTE_HOST","REMOTE_USER","REMOTE_PORT","SSH_PRIVATE_KEY","DEPLOY_KEY_NAME","SOURCE","TARGET","ARGS","EXCLUDE"];const r={GITHUB_WORKSPACE:process.env.GITHUB_WORKSPACE};s.forEach((e=>{r[e]=process.env[e]||process.env[`INPUT_${e}`]}));e.exports=r},447:(e,s,r)=>{const{sync:o}=r(238);const{exec:t,execSync:n}=r(81);const validateRsync=(e=(()=>{}))=>{const s=o("rsync");if(s){console.log("⚠️ [CLI] Rsync exists");const s=n("rsync --version",{stdio:"inherit"});return e()}console.log('⚠️ [CLI] Rsync doesn\'t exists. Start installation with "apt-get" \n');t("sudo apt-get update && sudo apt-get --no-install-recommends install rsync",((s,r,o)=>{if(s){console.log("⚠️ [CLI] Rsync installation failed. Aborting ... ",s.message);process.abort()}else{console.log("✅ [CLI] Rsync installed. \n",r,o);e()}}))};const validateInputs=e=>{const s=Object.keys(e);const r=s.filter((s=>{const r=e[s];if(!r){console.error(`⚠️ [INPUTS] ${s} is mandatory`)}return r}));if(r.length!==s.length){console.error("⚠️ [INPUTS] Inputs not valid, aborting ...");process.abort()}};e.exports={validateRsync:validateRsync,validateInputs:validateInputs}},822:(e,s,r)=>{const{writeFileSync:o}=r(147);const{join:t}=r(17);const{validateDir:n,validateFile:c}=r(505);const{HOME:i}=process.env;const addSshKey=(e,s)=>{const r=t(i||__dirname,".ssh");const a=t(r,s);n(r);c(`${r}/known_hosts`);try{o(a,e,{encoding:"utf8",mode:384})}catch(e){console.error("⚠️ writeFileSync error",a,e.message);process.abort()}console.log("✅ Ssh key added to `.ssh` dir ",a);return a};e.exports={addSshKey:addSshKey}},238:module=>{module.exports=eval("require")("command-exists")},81:e=>{"use strict";e.exports=require("child_process")},147:e=>{"use strict";e.exports=require("fs")},17:e=>{"use strict";e.exports=require("path")},837:e=>{"use strict";e.exports=require("util")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var s=__webpack_module_cache__[e];if(s!==undefined){return s.exports}var r=__webpack_module_cache__[e]={exports:{}};var o=true;try{__webpack_modules__[e](r,r.exports,__nccwpck_require__);o=false}finally{if(o)delete __webpack_module_cache__[e]}return r.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(898);const{validateRsync:s,validateInputs:r}=__nccwpck_require__(447);const{addSshKey:o}=__nccwpck_require__(822);const{REMOTE_HOST:t,REMOTE_USER:n,REMOTE_PORT:c,SSH_PRIVATE_KEY:i,DEPLOY_KEY_NAME:a,SOURCE:l,TARGET:d,ARGS:u,EXCLUDE:_,GITHUB_WORKSPACE:p}=__nccwpck_require__(229);const f={ssh:true,sshCmdArgs:["-o StrictHostKeyChecking=no"],recursive:true};console.log("GITHUB_WORKSPACE: ",p);console.log("REMOTE_HOST: ",process.env.REMOTE_HOST);console.log("REMOTE_USER: ",process.env.REMOTE_USER);console.log("SSH_PRIVATE_KEY: ",process.env.SSH_PRIVATE_KEY);const y=(()=>{const rsync=({privateKey:s,port:r,src:o,dest:t,args:n,exclude:c})=>{console.log(`[Rsync] Starting Rsync Action: ${o} to ${t}`);if(c)console.log(`[Rsync] exluding folders ${c}`);try{e({src:o,dest:t,args:n,privateKey:s,port:r,excludeFirst:c,...f},((e,s,r,o)=>{if(e){console.error("⚠️ [Rsync] error: ",e.message);console.log("⚠️ [Rsync] stderr: ",r);console.log("⚠️ [Rsync] stdout: ",s);console.log("⚠️ [Rsync] cmd: ",o);process.abort()}else{console.log("✅ [Rsync] finished.",s)}}))}catch(e){console.error("⚠️ [Rsync] command error: ",e.message,e.stack);process.abort()}};const init=({src:e,dest:r,args:t,host:n="localhost",port:c,username:i,privateKeyContent:l,exclude:d=[]})=>{s((()=>{const s=o(l,a||"deploy_key");const u=`${i}@${n}:${r}`;rsync({privateKey:s,port:c,src:e,dest:u,args:t,exclude:d})}))};return{init:init}})();const run=()=>{r({SSH_PRIVATE_KEY:i,REMOTE_HOST:t,REMOTE_USER:n});y.init({src:`${p}/${l||""}`,dest:d||`/home/${n}/`,args:u?[u]:["-rltgoDzvO"],host:t,port:c||"22",username:n,privateKeyContent:i,exclude:(_||"").split(",").map((e=>e.trim()))})};run()})();module.exports=__webpack_exports__})();